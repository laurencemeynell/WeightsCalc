#BlueJ class context
comment0.params=
comment0.target=WeightsCalc()
comment0.text=\r\n\ Zero\ argument\ constructor\ for\ objects\ of\ class\ WeightsCalc\r\n\ Initalises\ bar\ weight\ to\ 0.0\ and\ creates\ an\ empty\ List\ of\ available\ weights\r\n
comment1.params=aBar\ anAvailableWeights
comment1.target=WeightsCalc(double,\ java.util.List)
comment1.text=\r\n\ Two\ argument\ contructor\ for\ objects\ of\ class\ WeightsCalc\r\n\ @param\ aBar\ the\ weight\ of\ your\ bar\r\n\ @param\ anAvailableWeights\ a\ List\ containing\ all\ your\ available\ weights\r\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\r\n\ main\ method\ runs\ the\ WeightsCalc\ program\ in\ the\ command\ line\r\n
comment2.params=
comment2.target=double\ getBarWeight()
comment2.text=\r\n\ getBarWeight\ returns\ the\ weight\ of\ the\ bar\r\n\ @return\ the\ weight\ of\ the\ bar\r\n
comment3.params=
comment3.target=java.util.List\ getAvailableWeights()
comment3.text=\r\n\ getAvailableWeights\ returns\ a\ List\ of\ all\ the\ available\ weights\r\n\ @return\ all\ the\ available\ weights\ as\ a\ List\r\n
comment4.params=aBarWeight
comment4.target=void\ setBarWeight(double)
comment4.text=\r\n\ Sets\ the\ weight\ of\ the\ bar\ to\ the\ parameter\r\n\ @param\ the\ weight\ of\ the\ bar\ to\ be\ set\r\n
comment5.params=anAvailableWeights
comment5.target=void\ setAvailableWeights(java.util.List)
comment5.text=\r\n\ Sets\ the\ available\ weights\ to\ the\ parameter\r\n\ @param\ List<Weights>\ a\ list\ of\ the\ available\ weights\r\n
comment6.params=
comment6.target=java.lang.String\ userInput()
comment6.text=\r\n\ userInput\ gets\ input\ from\ the\ user\ from\ the\ command\ line\r\n\ It\ returns\ this\ input\ as\ a\ String\r\n\ @return\ String\ whatever\ the\ user\ just\ inputted\r\n
comment7.params=
comment7.target=void\ inputWeights()
comment7.text=\r\n\ Asks\ the\ user\ to\ input\ the\ weight\ of\ their\ bar\ and\ the\ weight\r\n\ and\ number\ of\ any\ weight\ plates\ they\ have\ avilable.\ \ Will\ keep\r\n\ asking\ for\ new\ weights\ until\ the\ user\ presses\ enter.\ \ Does\r\n\ not\ do\ any\ error\ checking\ so\ input\ that\ can't\ be\ parsed\ will\r\n\ cause\ the\ program\ to\ crash\r\n
comment8.params=
comment8.target=void\ runCalc()
comment8.text=\r\n\ runCalc\ asks\ the\ user\ to\ input\ their\ bar\ weight\ and\ available\ weights\r\n\ Then\ it\ will\ asks\ the\ user\ to\ input\ a\ target\ weight\ and\ display\ how\ to\r\n\ load\ the\ side\ of\ a\ barbell\ to\ achieve\ this\ target\ weight\ repeatedly\r\n\ until\ the\ user\ enters\ an\ empty\ String\ for\ a\ target\ weight\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ toString\ returns\ the\ weight\ of\ the\ bar\ followed\ by\ the\ weight\ and\ number\r\n\ of\ each\ set\ of\ plates\ in\ descending\ order\r\n\ @return\ the\ weight\ of\ the\ bar\ and\ number\ and\ weight\ of\ the\ plates\r\n
numComments=11
